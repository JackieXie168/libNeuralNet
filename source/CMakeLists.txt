SET(HEADERS
  bounding_layer.h
  conditions_layer.h
  conjugate_gradient.h
  cross_entropy_error.h
  data_set.h
  evolutionary_algorithm.h
  final_solutions_error.h
  gradient_descent.h
  independent_parameters_error.h
  independent_parameters.h
  inputs.h
  instances.h
  inverse_sum_squared_error.h
  levenberg_marquardt_algorithm.h
  linear_algebraic_equations.h
  mathematical_model.h
  matrix.h
  mean_squared_error.h
  minkowski_error.h
  model_selection.h
  multilayer_perceptron.h
  neural_network.h
  neural_parameters_norm.h
  newton_method.h
  normalized_squared_error.h
  numerical_differentiation.h
  numerical_integration.h
  opennn.h
  ordinary_differential_equations.h
  outputs.h
  outputs_integrals.h
  perceptron.h
  perceptron_layer.h
  performance_functional.h
  performance_term.h
  plug_in.h
  probabilistic_layer.h
  quasi_newton_method.h
  random_search.h
  root_mean_squared_error.h
  scaling_layer.h
  solutions_error.h
  sum_squared_error.h
  testing_analysis.h
  tinyxml2_ext.h
  training_algorithm.h
  training_rate_algorithm.h
  training_strategy.h
  unscaling_layer.h
  variables.h
  vector.h
)

SET(SOURCE
  bounding_layer.cpp
  conditions_layer.cpp
  conjugate_gradient.cpp
  cross_entropy_error.cpp
  data_set.cpp
  evolutionary_algorithm.cpp
  final_solutions_error.cpp
  gradient_descent.cpp
  independent_parameters.cpp
  independent_parameters_error.cpp
  inputs.cpp
  instances.cpp
  inverse_sum_squared_error.cpp
  levenberg_marquardt_algorithm.cpp
  linear_algebraic_equations.cpp
  mathematical_model.cpp
  mean_squared_error.cpp
  minkowski_error.cpp
  model_selection.cpp
  multilayer_perceptron.cpp
  neural_network.cpp
  neural_parameters_norm.cpp
  newton_method.cpp
  normalized_squared_error.cpp
  numerical_differentiation.cpp
  numerical_integration.cpp
  ordinary_differential_equations.cpp
  outputs.cpp
  outputs_integrals.cpp
  perceptron.cpp
  perceptron_layer.cpp
  performance_functional.cpp
  performance_term.cpp
  plug_in.cpp
  probabilistic_layer.cpp
  quasi_newton_method.cpp
  random_search.cpp
  root_mean_squared_error.cpp
  scaling_layer.cpp
  solutions_error.cpp
  sum_squared_error.cpp
  testing_analysis.cpp
  tinyxml2_ext.cpp
  training_algorithm.cpp
  training_rate_algorithm.cpp
  training_strategy.cpp
  unscaling_layer.cpp
  variables.cpp
)

add_library(opennn SHARED ${SOURCE})
